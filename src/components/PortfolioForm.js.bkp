import React, { useState } from "react";

// Form Components
import AddressForm from "./forms/AddressForm";
import ProfileLinkForm from "./forms/ProfileLinkForm";
import MyDetailsForm from "./forms/MyDetailsForm";
import EducationForm from "./forms/EducationForm";
import ExperienceForm from "./forms/ExperienceForm";
import SkillForm from "./forms/SkillForm";
import ProjectForm from "./forms/ProjectForm";
import CertificateForm from "./forms/CertificateForm";

// API Services
import {
  saveAddress,
  saveCertificates,
  saveEducation,
  saveExperience,
  saveImage,
  saveMyDetails,
  saveProfileLinks,
  saveProjects,
  saveSkills,
} from "../save-api";

function PortfolioForm() {
  const [image, setImage] = useState([null]);
  const [file, setFile] = useState([null]);

  const [myDetails, setMyDetails] = useState({
    name: "",
    email: "",
    phone: "",
    profile_picture: "",
    bio: "",
    resume: "",
    address_id: 0,
  });

  const [address, setAddress] = useState([
    { location: "", city: "", pincode: "", state: "", country: "" },
  ]);

  const [profileLink, setProfileLink] = useState([
    { link_name: "", link_type: "LinkedIn", url: "" },
  ]);

  const [education, setEducation] = useState([
    {
      institute: "",
      course: "",
      score_type: "CGPA",
      score: "",
      start_date: "",
      end_date: "",
    },
  ]);

  const [experience, setExperience] = useState([
    {
      organization: "",
      role: "",
      job_type: "Full-Time",
      description: "",
      start_date: "",
      end_date: null,
      is_current: false,
    },
  ]);

  const [skill, setSkill] = useState([{ name: "", category: "Technical" }]);

  const [project, setProject] = useState([
    {
      proj_name: "",
      description: "",
      start_date: "",
      end_date: "",
      github_url: "",
      demo_url: "",
    },
  ]);

  const [certificate, setCertificate] = useState([
    {
      name: "",
      institute: "",
      certi_file: "",
      start_date: "",
      end_date: "",
      certificate_url: "",
    },
  ]);

  const resetForm = () => {
    setImage([null]);
    setFile([null]);

    setMyDetails({
      name: "",
      email: "",
      phone: "",
      profile_picture: "",
      bio: "",
      resume: "",
      address_id: 0,
    });

    setAddress([
      {
        location: "",
        city: "",
        pincode: "",
        state: "",
        country: "",
      },
    ]);

    setProfileLink([
      {
        link_name: "",
        link_type: "LinkedIn",
        url: "",
      },
    ]);

    setEducation([
      {
        institute: "",
        course: "",
        score_type: "CGPA",
        score: "",
        start_date: "",
        end_date: "",
      },
    ]);

    setExperience([
      {
        organization: "",
        role: "",
        job_type: "Full-Time",
        description: "",
        start_date: "",
        end_date: null,
        is_current: false,
      },
    ]);

    setSkill([
      {
        name: "",
        category: "Technical",
      },
    ]);

    setProject([
      {
        proj_name: "",
        description: "",
        start_date: "",
        end_date: "",
        github_url: "",
        demo_url: "",
      },
    ]);

    setCertificate([
      {
        name: "",
        institute: "",
        certi_file: "",
        start_date: "",
        end_date: "",
        certificate_url: "",
      },
    ]);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      console.log("üîÑ Submitting Portfolio Data...");
      console.log("üñºÔ∏è Image File:", image);
      console.log("üìÑ Resume File:", file);

      // Upload profile picture
      const imageFormData = new FormData();
      imageFormData.append("file", image.file);
      const imageResponse = await saveImage(imageFormData);
      const profile_picture_id = imageResponse.fileId;
      console.log("‚úÖ Uploaded Profile Picture ID:", profile_picture_id);

      // Save address and get ID
      const addressResponse = await saveAddress(address);
      const address_id = addressResponse.insertId;
      console.log("‚úÖ Saved Address ID:", address_id);

      // Update myDetails with profile picture and address ID
      const updatedDetails = {
        ...myDetails,
        profile_picture: profile_picture_id,
        address_id,
      };

      // Upload certificates and map file IDs
      const fileIds = [];

      for (let i = 0; i < file.length; i++) {
        const fileFormData = new FormData();
        fileFormData.append("file", file[i]);

        try {
          const response = await saveImage(fileFormData);
          fileIds.push(response.fileId);
        } catch (error) {
          console.error(`‚ùå Failed to upload file at index ${i}:`, error);
          fileIds.push(null);
        }
      }

      const updatedCertificates = certificate.map((cert, index) => ({
        ...cert,
        certi_file: fileIds[index] || "",
      }));

      setCertificate(updatedCertificates);

      // Save all data
      await Promise.all([
        saveProfileLinks(profileLink),
        saveExperience(experience),
        saveEducation(education),
        saveSkills(skill),
        saveProjects(project),
        saveCertificates(updatedCertificates),
        saveMyDetails(updatedDetails),
      ]);

      alert("‚úÖ Portfolio data saved successfully!");
      resetForm();
    } catch (error) {
      console.error("‚ùå Error saving portfolio:", error);
      alert("Failed to save portfolio data.");
    }
  };

  return (
    <div className="container">
      <h2>Create Your Portfolio</h2>
      <form onSubmit={handleSubmit}>
        <MyDetailsForm
          myDetails={myDetails}
          setMyDetails={(value) => {
            console.log("üìå Updating MyDetails:", value);
            setMyDetails(value);
          }}
          image={image}
          setImage={(value) => {
            console.log("üìå Updating Image:", value);
            setImage(value);
          }}
        />
        <AddressForm address={address} setAddress={setAddress} />
        <ProfileLinkForm link={profileLink} setLinks={setProfileLink} />
        <ExperienceForm experience={experience} setExperience={setExperience} />
        <EducationForm education={education} setEducation={setEducation} />
        <SkillForm skill={skill} setSkill={setSkill} />
        <ProjectForm project={project} setProject={setProject} />
        <CertificateForm
          certificate={certificate}
          setCertificate={setCertificate}
          file={file}
          setFile={setFile}
        />
        <button type="submit" className="btn btn-success">
          Submit Portfolio
        </button>
      </form>
    </div>
  );
}

export default PortfolioForm;
